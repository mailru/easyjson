// +build ignore

// TEMPORARY AUTOGENERATED FILE: easyjson bootstapping code to launch
// the actual generator.

package main

import (
  "fmt"
  "os"

  "github.com/mailru/easyjson/gen"

  pkg "github.com/mailru/easyjson/tests"
)

func main() {
  g := gen.NewGenerator("data_easyjson.go")
  g.SetPkg("tests", "github.com/mailru/easyjson/tests")
  g.Add(pkg.EasyJSON_exporter_Arrays(nil))
  g.Add(pkg.EasyJSON_exporter_DeepNest(nil))
  g.Add(pkg.EasyJSON_exporter_DeepNestOptional(nil))
  g.Add(pkg.EasyJSON_exporter_EmbeddedStruct(nil))
  g.Add(pkg.EasyJSON_exporter_EncodingFlagsTestMap(nil))
  g.Add(pkg.EasyJSON_exporter_EncodingFlagsTestSlice(nil))
  g.Add(pkg.EasyJSON_exporter_ExcludedField(nil))
  g.Add(pkg.EasyJSON_exporter_IntArrayStruct(nil))
  g.Add(pkg.EasyJSON_exporter_IntKeyedMapStruct(nil))
  g.Add(pkg.EasyJSON_exporter_Ints(nil))
  g.Add(pkg.EasyJSON_exporter_MapInt32String(nil))
  g.Add(pkg.EasyJSON_exporter_MapInt64String(nil))
  g.Add(pkg.EasyJSON_exporter_MapIntString(nil))
  g.Add(pkg.EasyJSON_exporter_MapMyIntString(nil))
  g.Add(pkg.EasyJSON_exporter_MapStringString(nil))
  g.Add(pkg.EasyJSON_exporter_MapUint32String(nil))
  g.Add(pkg.EasyJSON_exporter_MapUint64String(nil))
  g.Add(pkg.EasyJSON_exporter_MapUintString(nil))
  g.Add(pkg.EasyJSON_exporter_MapUintptrString(nil))
  g.Add(pkg.EasyJSON_exporter_Maps(nil))
  g.Add(pkg.EasyJSON_exporter_MyUInt8Array(nil))
  g.Add(pkg.EasyJSON_exporter_MyUInt8Slice(nil))
  g.Add(pkg.EasyJSON_exporter_NamedPrimitiveTypes(nil))
  g.Add(pkg.EasyJSON_exporter_OmitEmpty(nil))
  g.Add(pkg.EasyJSON_exporter_Opts(nil))
  g.Add(pkg.EasyJSON_exporter_PrimitiveTypes(nil))
  g.Add(pkg.EasyJSON_exporter_Raw(nil))
  g.Add(pkg.EasyJSON_exporter_RequiredOptionalMap(nil))
  g.Add(pkg.EasyJSON_exporter_RequiredOptionalStruct(nil))
  g.Add(pkg.EasyJSON_exporter_Slices(nil))
  g.Add(pkg.EasyJSON_exporter_StdMarshaler(nil))
  g.Add(pkg.EasyJSON_exporter_StructWithInterface(nil))
  g.Add(pkg.EasyJSON_exporter_Structs(nil))
  g.Add(pkg.EasyJSON_exporter_SubP(nil))
  g.Add(pkg.EasyJSON_exporter_SubStruct(nil))
  g.Add(pkg.EasyJSON_exporter_UserMarshaler(nil))
  g.Add(pkg.EasyJSON_exporter_unexportedStruct(nil))
  if err := g.Run(os.Stdout); err != nil {
    fmt.Fprintln(os.Stderr, err)
    os.Exit(1)
  }
}
